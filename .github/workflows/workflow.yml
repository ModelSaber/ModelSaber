name: publish

on:
  push:
    branch: [ master ]

env:
  DOTNET_VER: '6.0.x'

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y.%-m.%-d')"

    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VER }}

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v2
      id: yarn-cache
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Install deps Main
      run: |
        cd ModelSaber.Main
        dotnet restore
        cd ClientApp
        yarn

    - name: Build Main
      run: |
        cd ModelSaber.Main
        dotnet build -c Release --no-restore
        dotnet publish -c Release -o ./dotnet-app -r linux-x64 /p:PublishSingleFile=true /p:Version=${{ steps.date.outputs.date }}.$(expr ${{ github.run_number }} % 10)

    - name: Zip files Main
      run: |
        cd ModelSaber.Main
        mv ./dotnet-app/ClientApp/build ./dotnet-app/dist
        rm -r ./dotnet-app/ClientApp
        cd ./dotnet-app
        tar -zcvf ../../dotnet-main-app.tgz .

    - name: Install deps API
      run: |
        cd ModelSaber.API
        dotnet restore
        cd ClientApp
        yarn

    - name: Build API
      run: |
        cd ModelSaber.API
        dotnet build -c Release --no-restore
        dotnet publish -c Release -o ./dotnet-app -r linux-x64 /p:PublishSingleFile=true /p:Version=${{ steps.date.outputs.date }}.$(expr ${{ github.run_number }} % 10)

    - name: Zip files API
      run: |
        cd ModelSaber.API
        cd ./dotnet-app
        tar -zcvf ../../dotnet-api-app.tgz .

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.date.outputs.date }}.${{ github.run_id }}
        release_name: Release ${{ steps.date.outputs.date }}.${{ github.run_id }}
        draft: false
        prerelease: false
    - name: Upload Release Asset Main
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dotnet-main-app.tgz
        asset_name: dotnet-main-app.tgz
        asset_content_type: application/tar+gzip
    - name: Upload Release Asset API
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dotnet-api-app.tgz
        asset_name: dotnet-api-app.tgz
        asset_content_type: application/tar+gzip
